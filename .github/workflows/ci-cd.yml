name: CI/CD Pipeline

# 워크플로를 트리거하는 이벤트
on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 실행
  pull_request:
    branches:
      - main  # main 브랜치로 Pull Request가 생성될 때마다 실행

jobs:
  build:
    # Ubuntu 최신 버전에서 실행
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2  # 리포지토리에서 코드를 체크아웃

      # 2. Docker Buildx 설정 (다중 플랫폼 지원)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Docker Hub 로그인
      - name: Logout from Docker Hub
        run: docker logout

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # GitHub Secrets에서 Docker Hub 사용자명 가져오기
          password: ${{ secrets.DOCKER_PASSWORD }}  # GitHub Secrets에서 Docker Hub 비밀번호 가져오기

      # 4. Docker 이미지 빌드
      - name: Build Docker image
        run: |
          docker build -t aqua ./backend  # Dockerfile이 있는 경로에서 Docker 이미지 빌드

#      # 5. 테스트 실행 (선택 사항)
#      - name: Run tests
#        run: |
#          docker run aqua pytest  # 도커 컨테이너 안에서 테스트 실행

      # 6. Docker 이미지 태깅 후 Docker Hub로 푸시
      - name: Push Docker image to Docker Hub
        run: |
          docker tag aqua jeongbeenson19/aqua:latest  # 이미지를 태깅
          docker push jeongbeenson19/aqua:latest  # Docker Hub에 푸시

      # 7. Discord 알림
      - name: Send Discord Notification
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "Docker image has been pushed to Docker Hub!"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
